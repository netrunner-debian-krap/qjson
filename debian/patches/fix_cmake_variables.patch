Subject: installs QJSONConfigVersion.cmake with correct naming.
Author: Ralf Jung <post@ralfj.de>
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=687537
Forwarded: not-needed
Last-Update: 2012-11-07

--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -39,7 +39,7 @@ SET( QT_DONT_USE_QTGUI TRUE )
 SET (LIB_SUFFIX "" CACHE STRING "Define suffix of directory name (32/64)" )
 SET (LIB_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}" CACHE STRING "Directory where lib will install")
 SET (INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/include" CACHE PATH "The directory the headers are installed in")
-SET (CMAKE_MODULES_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/share/apps/cmake/modules" CACHE PATH "The directory to install FindQRpc.cmake to")
+SET (CMAKECONFIG_INSTALL_DIR "${LIB_INSTALL_DIR}/cmake/${CMAKE_PROJECT_NAME}" CACHE PATH "Directory where to install QJSONConfig.cmake")
 
 
 set(QJSON_LIB_MAJOR_VERSION "0")
@@ -69,13 +69,24 @@ IF (KDE4_BUILD_TESTS OR QJSON_BUILD_TEST
   ADD_SUBDIRECTORY(tests)
 ENDIF (KDE4_BUILD_TESTS OR QJSON_BUILD_TESTS)
 
-add_subdirectory(cmake/modules)
-
 
 #CONFIGURE_FILE(
 #  "${CMAKE_MODULE_PATH}/cmake_uninstall.cmake.in"
 #  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
 #  IMMEDIATE @ONLY)
 
+INSTALL(EXPORT qjson-export DESTINATION ${CMAKECONFIG_INSTALL_DIR} FILE QJSONTargets.cmake)
+
+# cmake-modules
+CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/QJSONConfig.cmake.in
+               ${CMAKE_CURRENT_BINARY_DIR}/QJSONConfig.cmake
+               @ONLY)
+CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/QJSONConfigVersion.cmake.in
+               ${CMAKE_CURRENT_BINARY_DIR}/QJSONConfigVersion.cmake
+               @ONLY)
+INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/QJSONConfig.cmake
+              ${CMAKE_CURRENT_BINARY_DIR}/QJSONConfigVersion.cmake
+        DESTINATION "${CMAKECONFIG_INSTALL_DIR}")
+
 #ADD_CUSTOM_TARGET(uninstall
 #  "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
--- /dev/null
+++ b/QJSONConfig.cmake.in
@@ -0,0 +1,6 @@
+GET_FILENAME_COMPONENT(myDir ${CMAKE_CURRENT_LIST_FILE} PATH)
+
+SET(QJSON_LIBRARIES qjson)
+SET(QJSON_INCLUDE_DIR "@INCLUDE_INSTALL_DIR@")
+
+include(${myDir}/QJSONTargets.cmake)
--- /dev/null
+++ b/QJSONConfigVersion.cmake.in
@@ -0,0 +1,9 @@
+SET(PACKAGE_VERSION "@QJSON_LIB_VERSION_STRING@")
+IF (PACKAGE_FIND_VERSION VERSION_EQUAL PACKAGE_VERSION)
+  SET(PACKAGE_VERSION_EXACT TRUE)
+ENDIF (PACKAGE_FIND_VERSION VERSION_EQUAL PACKAGE_VERSION)
+IF (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
+  SET(PACKAGE_VERSION_COMPATIBLE TRUE)
+ELSE (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
+  SET(PACKAGE_VERSION_UNSUITABLE TRUE)
+ENDIF (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
--- a/cmake/modules/CMakeLists.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-set(cmakeFiles FindQJSON.cmake)
-install(FILES ${cmakeFiles} DESTINATION ${CMAKE_MODULES_INSTALL_DIR})
--- a/cmake/modules/FindQJSON.cmake
+++ /dev/null
@@ -1,46 +0,0 @@
-# Find QJSON - JSON handling library for Qt
-#
-# This module defines
-#  QJSON_FOUND - whether the qsjon library was found
-#  QJSON_LIBRARIES - the qjson library
-#  QJSON_INCLUDE_DIR - the include path of the qjson library
-#
-
-if (QJSON_INCLUDE_DIR AND QJSON_LIBRARIES)
-
-  # Already in cache
-  set (QJSON_FOUND TRUE)
-
-else (QJSON_INCLUDE_DIR AND QJSON_LIBRARIES)
-
-  if (NOT WIN32)
-    # use pkg-config to get the values of QJSON_INCLUDE_DIRS
-    # and QJSON_LIBRARY_DIRS to add as hints to the find commands.
-    include (FindPkgConfig)
-    pkg_check_modules (QJSON REQUIRED QJson>=0.5)
-  endif (NOT WIN32)
-
-  find_library (QJSON_LIBRARIES
-    NAMES
-    qjson
-    PATHS
-    ${QJSON_LIBRARY_DIRS}
-    ${LIB_INSTALL_DIR}
-    ${KDE4_LIB_DIR}
-  )
-
-  find_path (QJSON_INCLUDE_DIR
-    NAMES
-    parser.h
-    PATH_SUFFIXES
-    qjson
-    PATHS
-    ${QJSON_INCLUDE_DIRS}
-    ${INCLUDE_INSTALL_DIR}
-    ${KDE4_INCLUDE_DIR}
-  )
-
-  include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(QJSON DEFAULT_MSG QJSON_LIBRARIES QJSON_INCLUDE_DIR)
-
-endif (QJSON_INCLUDE_DIR AND QJSON_LIBRARIES)
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -35,7 +35,7 @@ set_target_properties(qjson PROPERTIES
                       DEFINE_SYMBOL QJSON_MAKEDLL
                       )
 
-INSTALL(TARGETS qjson
+INSTALL(TARGETS qjson EXPORT qjson-export
    LIBRARY DESTINATION ${LIB_INSTALL_DIR}
    RUNTIME DESTINATION bin
    ARCHIVE DESTINATION  ${LIB_INSTALL_DIR}
